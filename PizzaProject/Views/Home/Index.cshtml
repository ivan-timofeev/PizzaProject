@model IEnumerable<Pizza>

@{
    ViewData["Title"] = "Home Page";
}

<div class="pizza-topic-container">
    <h2 class="pizza-topic">Пицца</h2>
</div>

<div class="pizzas-container">
@foreach (var pizza in Model)
{
    <div class="pizza-div">
        <div class="pizza-img" onclick="addPizza(@pizza.Id)" style="outline: none;">
            <img src="@pizza.PictureUrl" width="292" alt="Изображение пиццы">
        </div>
        <div class="pizza-name" id="pizza-name-@pizza.Id">@pizza.Name</div>
        <div class="pizza-desk">@pizza.Description</div>
        <div class="pizza-footer">
            <div style="font-size: 20px; margin-top: 10px" id="pizza-price-@pizza.Id">@pizza.Price.ToString("C2")</div>
            <div class="pizza-btn-container" id="btn-container-@pizza.Id">
                <div class="pizza-btn" onclick="addPizza(@pizza.Id)">Добавить</div>
            </div>
        </div>
    </div>
}
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    var cart = [{ id: 0, count: 0 }]
    var storage = window.localStorage;

    loadCart();
    console.log(cart);

    function saveCart() {
        storage.setItem('cart', JSON.stringify(cart));
    }

    function loadCart() {
        cartJson = storage.getItem('cart');
        cart = JSON.parse(cartJson);

        initializeUi();
    }

    // Обновление пользовательского интерфейса после загрузки корзины
    function initializeUi() {
        for (let i = 0; i < cart.length; i++) {
            updateUi(cart[i].id);
        }
    }

    function getCountById(id) {
        for (let i = 0; i < cart.length; i++) {
            if (cart[i].id == id) {
                return cart[i].count;
            }
        }

        return 0;
    }

    // Добавление пиццы в корзину
    function addInCart(id, val = 1) {
        let found = false;

        for (let i = 0; i < cart.length; i++)
        {
            if (cart[i].id == id) {
                cart[i].count += val;
                cart[i].name = $(`#pizza-name-${id}`).html();
                cart[i].price = $(`#pizza-price-${id}`).html();
                found = true;
            }
        }

        if (!found) {
            cart.push({ id: parseInt(id), count: 1 });
        }
    }

    // Обновление пользовательского интерфейса
    function updateUi(id) {
        if (getCountById(id) < 1) {
            return $(`#btn-container-${id}`).html(`
                <div class="pizza-btn" onclick="addPizza(${id})">Добавить</div>
            `);
        }

        $(`#btn-container-${id}`).html(`
            <div class="pizza-sub-btn" onclick="remPizza(${id})">-</div>
            <div class="pizza-counter">${getCountById(id)}</div>
            <div class="pizza-sub-btn" onclick="addPizza(${id})">+</div>
        `);
    }

    // Кнопка "+"
    function addPizza(id) {
        try {
            addInCart(id);
            updateUi(id);
            saveCart();
        } catch { cart = [{ id: 0, count: 0 }] }
    }

    // Кнопка "-"
    function remPizza(id) {
        try {
            addInCart(id, -1);
            updateUi(id);
            saveCart();
        } catch { cart = [{ id: 0, count: 0 }] }
    }
</script>

<style>
    .pizza-topic {
        margin-bottom: 50px;
        margin-top: 150px;
    }

    .pizza-div {
        display: block;
        width: 292px;
        height: 500px;
        word-break: break-all;
        margin-bottom: 40px;
    }

    .pizza-img {
        display: block;
        cursor: pointer;
        transition: 0.2s;
    }

    .pizza-img:hover {
        transform: scale(1.03);
    }

    .pizza-name {
        margin-top: 40px;
        font-size: 24px;
    }

    .pizza-footer {
        margin-top: 20px;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .pizza-btn {
        font-size: 20px;
        background-color: lightgreen;
        border-radius: 10px;
        padding: 8px 14px;
        cursor: pointer;
        transition: 0.2s;

        -ms-user-select: none;
        -moz-user-select: none;
        -khtml-user-select: none;
        -webkit-user-select: none;
    }

    .pizza-btn-container {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        justify-content:center;
        align-items: center;
    }
    
    .pizza-counter {
        font-size: 18px;
        margin-left: 15px;
        margin-right: 15px;
    }

    .pizza-sub-btn {
        font-size: 20px;
        background-color: lightgreen;
        border-radius: 10px;
        padding: 5px;
        cursor: pointer;
        transition: 0.2s;

        width: 40px;
        height: 40px;

        text-align: center;
        vertical-align: central;

        -ms-user-select: none;
        -moz-user-select: none;
        -khtml-user-select: none;
        -webkit-user-select: none;
    }

    .pizza-btn-container {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
    }

    .pizza-btn:hover {
        background-color: forestgreen;
    }

    .pizza-sub-btn:hover {
        background-color: forestgreen;
    }

    .pizzas-container {
        margin-top: 20px;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }


    @@media only screen and (max-width: 770px)
    {
        .pizza-topic-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .pizza-topic {
            margin: 20px 0px 0px 0px !important;
        }

        .pizza-div {
            margin-top: 40px;
        }

        .pizzas-container {
            margin-top: 20px;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .pizzas-container::after {
            content: "";
            flex: none !important;
        }
    }
</style>